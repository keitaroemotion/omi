#!/usr/bin/env ruby

require "json"

#
# the intension of this script is as follows:
#
#
# 1. collect all failed cards, using search API
# 2. charge those cards again
#

skey = ARGV[0]
skey = "skey_test_5b3qijwxm04jmc0htit"

if /^skey_/ !~ skey
  abort "SKEY #{skey} is invalid."
end

def get_failed_charges(skey)
  command = "curl -s 'https://api.omise.co/search" \
            "?scope=charge&filters\\"              \
            "[failure_code\\]=insufficient_fund' " \
            "-u #{skey}:"
  `#{command}`
end

def get_bad_cards(skey)
  bad_cards = JSON
                .parse(get_failed_charges(skey))["data"]
                .map   { |x|
                  location = x["card"]["location"]
                  [ 
                    /cust_[^\/]+/.match(location).to_s,
                    /card_[^\/]+/.match(location).to_s,
                    x["amount"],
                    x["created"],
                  ]
                }
                .select{ |x| x[0] != "" && x[1] != "" }
                .uniq
end                

result = ""

get_bad_cards(skey).each do |customer, old_card, amount, created|
  command = "curl https://api.omise.co/charges \\\n " \
    " -X POST \\\n " \
    " -u #{skey}: \\\n " \
    " -d 'amount=#{amount}' \\\n " \
    " -d 'currency=jpy' \\\n " \
    " -d 'card=[NEW TOKEN OF CUSTOMER #{customer}]'"
  result = [
     "CREATED:                           #{created}",
     "OLD CARD WAS:                      #{old_card}",
     "YOU NEED TO GET TOKEN OF CUSTOMER: #{customer}\n\n",
     command,
  ].join("\n")
end    

def write_result_to_console(result)
  tmp = ".tmpfileforjson"
  File.open(tmp, "w") do |f|
    f.puts result
  end
  system("vim #{tmp}") 
end  

write_result_to_console(result)
