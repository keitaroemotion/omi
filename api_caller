#!/usr/bin/env ruby

#
# YOU NEED TO USE API_CALLER SUCH AS:
#
# ./api_caller scripts/[your script you want]
#
#
# XXX might need Turing Incomplete features 
#     such that enables executing the script files
#     consecutively the former script passes the
#     output to the latter.
#
# XXX might need to make this application installable  

def help
    puts "\napi_caller scripts/*\n\n"
    abort
end

if ARGV[0] == "-h"
    help
end

script_path = ARGV[0]
CONFIG_PATH = "config"

abort "script path is missing"              unless script_path
abort "file does not exist: #{script_path}" unless File.exist?(script_path)
abort "config file missing"                 unless File.exist?(CONFIG_PATH)

def config
    lines = File.open(CONFIG_PATH, "r").each_line.to_a
    lines.map{ |line| line.split("=").map(&:chomp) }.flatten
end

config_hash = Hash[*(config)]
skey        = config_hash["skey"]
script_body = File.read(script_path).gsub("$skey", skey)

unless script_path.include?("curl -s")
  script_body = script_body.gsub("curl", "curl -s")
end

puts "-------------------------"
puts "[Command]\n"
script_body.lines.each do |line|
    puts line unless line.start_with?("#")
end
puts "-------------------------"

shell_execution_result = `#{script_body}`

response_params = 
puts shell_execution_result
