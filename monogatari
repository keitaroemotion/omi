#!/usr/bin/env ruby

ROOT_DIR                            = "scripts/"
CREATE_A_TOKEN                      = "token/create_a_token"
CREATE_A_CUSTOMER_AND_ATTACH_A_CARD = "customer/create_a_customer_and_attach_a_card"
CHARGE_A_CARD_USING_A_CUSTOMER      = "charge/charge_a_card_using_a_customer"

def call(action, clue_regex: nil, options: "")
    lines = `./api_caller #{ROOT_DIR}/#{action} #{options}`
        .split("\n")
    if clue_regex
        lines = lines.select { |a| a =~ clue_regex  }
                     .map { |a| clue_regex.match(a).to_s }
    end    
    lines.flatten.uniq
end  

def charge_a_card_using_a_customer(customer)
    call(CHARGE_A_CARD_USING_A_CUSTOMER, options: "customer=#{customer}")
end

def create_a_customer_and_attach_a_card
    call(CREATE_A_CUSTOMER_AND_ATTACH_A_CARD, options: "token=#{create_a_token.first}")
end

def create_a_token
    result = call(CREATE_A_TOKEN, clue_regex: /tokn_[a-z0-9_]+/)
    print "token #{result} created: "; $stdin.gets.chomp
    result
end    

options = [
    "Create token",
    "Create customer with card -> Charge the customer "  
]

options.each_with_index do |e, i|
    puts "[#{i}] #{e}"
end

print "[choose monogatari]: "

case $stdin.gets.chomp
when "0"
    create_a_token
when "1"    
    result = create_a_customer_and_attach_a_card
    puts result
    customer = /cust_[a-z0-9_]+/.match(result.join).to_s
    print "[customer '#{customer}' created with card info] "
    $stdin.gets
    puts charge_a_card_using_a_customer(customer)
    puts "[customer '#{customer}' charged]"
else
end
